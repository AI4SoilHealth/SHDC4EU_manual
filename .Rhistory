#| echo: true
#| results: as-is
# Initialization Cell: Import libraries and set paths
import pandas as pd
import os
import sys
import numpy as np
os.environ['USE_PYGEOS'] = '0'
import geopandas as gpd
from eumap.misc import find_files, nan_percentile, GoogleSheet, ttprint
module_path = '/mnt/lacus/ai4sh_data.harmo/soil-data/code/' # Add the folder containing harmonization_tool_kit.py to the system path
if module_path not in sys.path:
sys.path.append(module_path)
print(os.listdir(module_path))
from harmonization_tool_kit import plot_subplots_histogram, conversion_and_score, plot_spatial_distribution
input_path = '/mnt/lacus/ai4sh_data.harmo/raw_data'
output_path = '/mnt/lacus/ai4sh_data.harmo/data_v2'
#| echo: true
#| results: as-is
# Initialization Cell: Import libraries and set paths
import pandas as pd
import os
import sys
import numpy as np
os.environ['USE_PYGEOS'] = '0'
import geopandas as gpd
from eumap.misc import find_files, nan_percentile, GoogleSheet, ttprint
module_path = '/mnt/lacus/ai4sh_data.harmo/soil-data/code/' # Add the folder containing harmonization_tool_kit.py to the system path
if module_path not in sys.path:
sys.path.append(module_path)
print(os.listdir(module_path))
from harmonization_tool_kit import plot_subplots_histogram, conversion_and_score, plot_spatial_distribution
input_path = '/mnt/lacus/ai4sh_data.harmo/raw_data'
output_path = '/mnt/lacus/ai4sh_data.harmo/data_v2'
#| echo: true
#| results: as-is
# Initialization Cell: Import libraries and set paths
import pandas as pd
import os
import sys
import numpy as np
os.environ['USE_PYGEOS'] = '0'
import geopandas as gpd
from eumap.misc import find_files, nan_percentile, GoogleSheet, ttprint
module_path = '/mnt/lacus/ai4sh_data.harmo/soil-data/code/' # Add the folder containing harmonization_tool_kit.py to the system path
if module_path not in sys.path:
sys.path.append(module_path)
print(os.listdir(module_path))
from harmonization_tool_kit import plot_subplots_histogram, conversion_and_score, plot_spatial_distribution
input_path = '/mnt/lacus/ai4sh_data.harmo/raw_data'
output_path = '/mnt/lacus/ai4sh_data.harmo/data_v2'
ls <- c("jsonlite", "RCurl", "emo", "stringi")
new.packages <- ls[!(ls %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages, repos = "https://cloud.r-project.org")
#devtools::install_github("hadley/emo")
lapply(ls, require, character.only = TRUE)
reticulate::repl_python()
